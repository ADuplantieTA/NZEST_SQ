# Standard library
import os
# Third-party
import streamlit as st
# Local modules
from nzest_constants import PAGES
from Plot.Energy_Demand import Energy_Demand
from Plot.Energy_Demand_Grouped import Energy_Demand_Grouped
from Plot.Multi_Sector_Bar import Multi_Sector_Bar
from Plot.Energy_Demand_Bar import Energy_Demand_Bar
from Plot.Industry_Sector_Bar import Industry_Sector_Bar
from Plot.GHG_Graph import GHG_Graph
from Plot.Carbon_content_Bar import Carbon_content_Bar
from Plot.Pie_Generator import Pie_Generator
from Plot. Grouped_Industry_Bar import  Grouped_Industry_Bar


def setup_page():
    # 1) Page configuration
    st.set_page_config(page_title="NZEST explorator", layout="wide")

    # Page transition animation: fade-in effect
    st.markdown("""
    <style>
    .stApp {
        animation: fadeIn 0.5s ease-in-out;
    }
    @keyframes fadeIn {
        from {opacity: 0;}
        to {opacity: 1;}
    }
    </style>
    """, unsafe_allow_html=True)

    # Sidebar logo styling (rounded corners, border, shadow, full width)
    st.markdown("""
        <style>
        [data-testid="stSidebar"] img {
            border-radius: 20px !important;
            border: 2px solid #b8d8eb;
            box-shadow: 0 2px 8px rgba(0,0,0,0.07);
            width: 100% !important;
            height: auto !important;
            max-width: 100% !important;
            display: block;
            margin: 0 auto;
        }
        </style>
    """, unsafe_allow_html=True)

    # Base directory for consistent file path reference
    base_dir = os.path.join(os.path.dirname(__file__), "Input")

    # Compute and display sidebar logo
    logo_path = os.path.join(base_dir, "logo.png")
    # Debug: show the resolved path
    if os.path.exists(logo_path):
        st.sidebar.image(logo_path)
    else:
        st.warning(f"Sidebar logo not found at {logo_path}")

    # Initialize intro flag and default page
    if "intro_shown" not in st.session_state:
        st.session_state["intro_shown"] = False
    if "Go to" not in st.session_state:
        st.session_state["Go to"] = "Energy Demand"


def _handle_continue():
    st.session_state['intro_shown'] = True
    st.session_state['Go to'] = "Energy Demand"


# Intro page function
def Intro():
    # Hide sidebar on intro
    st.markdown("<style>[data-testid='stSidebar']{display:none;}</style>", unsafe_allow_html=True)
    # Blue outline and rounded corners for intro page logo
    st.markdown("""
        <style>
        /* Blue outline and rounded corners for intro page logo */
        .stApp img[src*='Logo.png']:not([data-testid]) {
            background: #fff;
            border-radius: 20px !important;
            border: 2.5px solid #3389bd !important;
            box-shadow: 0 2px 8px rgba(51, 137, 189, 0.10);
            padding: 10px;
            width: 100% !important;
            height: auto !important;
            max-width: 350px !important;
            display: block;
            margin: 0 auto;
        }
        </style>
    """, unsafe_allow_html=True)
    # Intro page logo display with debug
    base_dir = os.path.join(os.path.dirname(__file__), "Input")
    logo_path = os.path.join(base_dir, "logo.png")
    if os.path.exists(logo_path):
        st.image(logo_path, width=None)
    else:
        st.warning(f"Intro logo not found at {logo_path}")
    st.title("Welcome to the NZEST Dashboard")
    st.markdown("""
**Welcome!**  
This dashboard presents the *Status-Quo* energy demand projections generated by the Canadian NZEST model. NZEST is a scenario analysis tool that simulates energy demand under current policies and technology adoption rates.

Key highlights:
- **Data source**: NZEST Status-Quo scenario outputs.
- **Whatâ€™s inside**:
  - **Energy Demand**: Time series of projected demand by sector.
  - **Pie Charts**: Sectoral breakdowns of end-use demand.
  - **Bar Charts**: Comparative views across sectors and subsectors.
  - **GHG Emissions**: GHG views across sectors and subsectors per provinces.

Navigation guide:
- **Go to**: Use the top-left dropdown to switch between pages.
- **Select Scenario (beta)**: Choose between Status-Quo and Net-Zero views.
- **Filters**: Adjust year, sector, province, and display unit in the sidebar to refine data.
- **Downloads**: Export chart data via the download button in the sidebar.

Click **Continue** to explore detailed charts and insights.
    """, unsafe_allow_html=True)
    if st.button("Continue", on_click=_handle_continue):
        pass
    st.stop()


def run_app():
    setup_page()

    # Automatically show intro page once
    if not st.session_state["intro_shown"]:
        Intro()

    pages_for_select = [k for k in PAGES.keys() if k != "Intro"]
    selection = st.sidebar.selectbox("Go to", pages_for_select, key="Go to")

    # 8) Dispatch
    if selection == "GHG Emissions":
        GHG_Graph()
    elif selection == "Energy Demand":
        Energy_Demand()
    elif selection == "Energy Demand Grouped":
        Energy_Demand_Grouped()
    elif selection == "Energy Demand (Bar Chart)":
        Energy_Demand_Bar()
    elif selection == "Carbon Content (Bar Chart)":
        Carbon_content_Bar()
    # elif selection == "Pie Chart All Sectors":
    #     Pie_Generator("All")
    elif selection == "Pie Chart Agriculture":
        Pie_Generator("Agriculture", 2)
    elif selection == "Pie Chart Transport":
        Pie_Generator("Transport", 2)
    elif selection == "Pie Chart Building":
        Pie_Generator("Commercial|Residential", 2)
    elif selection == "Pie Chart Industry":
        Pie_Generator("Industry", 2)
    elif selection == "Multi Sector Bar Chart":
        Multi_Sector_Bar()
    elif selection == "Industry Subsector Bar Chart":
        Industry_Sector_Bar()
    elif selection == "Grouped Industry Bar Chart":
        Grouped_Industry_Bar()
    elif selection == "Carbon Content (Bar Chart)":
        Carbon_content_Bar()


if __name__ == "__main__":
    run_app()
